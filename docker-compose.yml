version: "3"

services:

  puppet:
    build:
      context: server
      args:
        PUPPET_VERSION: ${PUPPET_VERSION:-5.3.7}
    container_name: ${PUPPET_SERVER_CONTAINER_NAME:-server}
    hostname: puppet.${DOMAIN:-internal}
    environment:
      PUPPERWARE_ANALYTICS_ENABLED: "false"
      # DNS_ALT_NAMES must be set before starting the stack the first time,
      # and must list all the names under which the puppetserver can be
      # reached. 'puppet.${DOMAIN:-internal}' must be one of them, otherwise puppetdb won't be
      # able to get a cert. Add other names as a comma-separated list
      #DNS_ALT_NAMES: puppet,puppet.${DOMAIN:-internal},${DNS_ALT_NAMES:-}
    volumes:
      - ${VOLUME_ROOT:-.}/volumes/code:/etc/puppetlabs/code/
      - ${VOLUME_ROOT:-.}/volumes/puppet:/etc/puppetlabs/puppet/
      - ${VOLUME_ROOT:-.}/volumes/serverdata:/opt/puppetlabs/server/data/puppetserver/
      - ${CUSTOM_ROOT:-.}/custom/r10k:/etc/puppetlabs/r10k/
      - ${CUSTOM_ROOT:-.}/custom/enc/tables.yaml:${PUP_CUSTOM_DIR:-/etc/puppetlabs/local/}/enc/tables.yaml
      - ${CUSTOM_ROOT:-.}/custom/enc/pup_enc.db:${PUP_CUSTOM_DIR:-/etc/puppetlabs/local/}/enc/pup_enc.db
    networks: [ dockerpup_net ]

  agent-centos:
    build:
      context: agent/centos
      args:
        PUPPET_VERSION: ${PUPPET_VERSION:-5.3.7}
        PUPPET_AGENT_CERTNAME: ${PUPPET_AGENT_CERTNAME:-agent-centos-1}
    container_name: ${PUPPET_AGENT_CERTNAME:-agent-centos-1}
    depends_on: [ puppet ]
    hostname: ${PUPPET_AGENT_CERTNAME:-agent-centos-1}.${DOMAIN:-internal}
    networks: [ dockerpup_net ]
    privileged: true
    volumes: [ /sys/fs/cgroup:/sys/fs/cgroup:ro ]

networks:
  dockerpup_net:
